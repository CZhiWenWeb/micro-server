Class文件里面存储的都只是符号引用，而不是方法在实际运行时内存布局中的
入口地址，在类加载的解析阶段，会将一部分符号引用转化为直接引用，这种
解析能成立的前提时：方法在程序真正运行之前就有一个可确定的调用版本，并
且这个方法的调用版本在运行期是不可改变的，这类方法的调用称为解析
java语言中符合“编译器可知，运行期不可变”这个要求的方法，主要包括静态
方法和私有方法两大类，前者与类型直接关联，后者在外部不可被访问

java虚拟机里面提供了5条方法调用字节码指令
1. invokestatic：调用静态方法
2. invokespecial: 调用实例构造器<init>方法，私有方法和父类方法
3. invokevirtual: 调用所有的虚方法
4. invokeinterface: 调用接口方法，会在运行时再确定一个实例此接口的对象
（上面4条调用指令，分派逻辑是固化在java虚拟机内部的）
5. invokedynamic: 先在运行时动态解析出调用点限定符所引用的方法，然后再
执行该方法，invokedynamic指令的分派逻辑是由用户所设定的引导方法决定的
