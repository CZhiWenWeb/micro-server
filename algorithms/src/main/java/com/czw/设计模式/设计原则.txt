设计原则不可能完全遵守，但违背时应知道违背的理由

基础:抽象

原则:1,封装变化,动静分离
    2.多用组合,少用继承
    3.针对接口编程,不针对实现编程
    4.为交互对象之间的松耦合设计而努力
    5.对扩展开放,对修改关闭
    6.要依赖抽象，不要依赖具体类
    7.变量不可以持有具体类的引用，如果使用new就会持有具体类的引用，可以
    用工厂模式来避开这样的做法
    8.不要让类派生自具体类，如果派生自具体类，你就会依赖具体类，请派生自一个
    抽象（抽象类或者一个接口）
    9.不要覆盖基类中已实现的方法，如果覆盖基类已实现的方法，那么你的基类就不
    是一个真正适合被继承的抽象，基类中的以实现方法应该由子类共享
模式:1.策略模式
     2.观察者模式(代表式人物---MVC)
     3.装饰者模式(代表java.io包)
     4.工厂模式

